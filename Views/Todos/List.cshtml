@using TODOList.TodoCore.Models.Entities;
@using Microsoft.AspNetCore.Mvc.TagHelpers

@model List<Todo>

<h1>Todos</h1>

<table class="table" border="1">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>Amount</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var todo in Model)
        {
            <tr class="@(todo.IsCompleted ? "completed" : "")">
                <td>@todo.Id</td>
                <td>@todo.Name</td>
                <td>@todo.Description</td>
                <td>@todo.Amount</td>
                <td>
                    <a class="btn btn-primary" asp-controller="Todos" asp-action="Edit" asp-route-id="@todo.Id">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<style>
    .completed {
        text-decoration: line-through;
    }
</style>

<h2>SearchTodo</h2>

@using (Html.BeginForm("SearchTodo", "Todos", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="form-group">
        <label for="searchTerm">SearchTodos:</label>
        <input type="text" name="searchTerm" class="form-control" value="@ViewBag.SearchTerm" placeholder="Enter search term">
        <button type="submit" class="btn btn-default">Search</button>
    </div>
}

<script>
    new Vue({
        el: '#todoApp',
        data: {
            todo: {
                name: '',
                description: ''
            }
        },
        methods: {
            searchTodos() {
                fetch(`/Todos/List?searchTerm=${this.searchTerm}`)
                    .then(response => response.json())
                    .then(data => {
                        this.todos = data;
                    })
                    .catch(error => console.error('Error:', error));
            }
        }
    });
</script>
